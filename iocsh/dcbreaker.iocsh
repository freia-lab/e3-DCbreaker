#- ###         MODBUS   DCbreaker   iocsh           ###
#- ####################################################
#- >> Mandatory
#- ASYN_PORT_NAME - MODBUS ASYN <name> on address <IPaddr> port <port>
#- DCBREAKER_IP   - MODBUS PLC IP address
#- PREFIX	  - PV PREFIX
#- DEV_NAME	  - Device name
#-
#-


#-https://epics.anl.gov/modules/soft/asyn/R4-29/asynDriver.html#drvAsynSerialPort
#-Specify the TCP endpoint and give your 'bus' an arbitrary name eg. "asynstream1".
#-drvAsynIPPortConfigure 'port name' 'host:port [protocol]' priority 'disable auto-connect' noProcessEos


drvAsynIPPortConfigure("$(ASYN_PORT_NAME)","$(DCBREAKER_IP):502",0,0,1)

#modbusInterposeConfig(portName, 
#                      linkType,
#                      timeoutMsec,
#                      writeDelayMsec)

modbusInterposeConfig("$(ASYN_PORT_NAME)",0,2000,0)

#drvModbusAsynConfigure	 'Port name'
#			 'Octet port name' 
#			 'Modbus slave address' 
#			 'Modbus function code' 
#			 'Modbus start address' 
#			 'Modbus length' 
#			 'Data type' 
#			 'Poll time (msec)' 
#			 'PLC type'

drvModbusAsynConfigure($(ASYN_PORT_NAME)_DATA, "$(ASYN_PORT_NAME)", 1, 4, 0, 85, "INT16", 2000, "astrol")
drvModbusAsynConfigure($(ASYN_PORT_NAME)_DATA_PARAM, "$(ASYN_PORT_NAME)", 1, 3, 16, 4, "INT16", 2000, "astrol")

#Load your database defining the EPICS records
dbLoadRecords("dcbreaker.db", "PORT_DATA=$(ASYN_PORT_NAME)_DATA,PORT_PARAM=$(ASYN_PORT_NAME)_DATA_PARAM,P=$(PREFIX),D=$(DEV_NAME)")

